{"version":3,"sources":["vendor.js","main.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["'use strict';\n\n$(function() {\n  $('a[href*=\"#\"]:not([href=\"#\"])').click(function() {\n    if (location.pathname.replace(/^\\//,'') == this.pathname.replace(/^\\//,'') && location.hostname == this.hostname) {\n      var target = $(this.hash);\n      target = target.length ? target : $('[name=' + this.hash.slice(1) +']');\n      if (target.length) {\n        $('html, body').animate({\n          scrollTop: target.offset().top\n        }, 1000);\n        return false;\n      }\n    }\n  });\n});\n\n","(function($,sr){\n\n  // debouncing function from John Hann\n  // http://unscriptable.com/index.php/2009/03/20/debouncing-javascript-methods/\n  var debounce = function (func, threshold, execAsap) {\n      var timeout;\n\n      return function debounced () {\n          var obj = this, args = arguments;\n          function delayed () {\n              if (!execAsap)\n                  func.apply(obj, args);\n              timeout = null;\n          };\n\n          if (timeout)\n              clearTimeout(timeout);\n          else if (execAsap)\n              func.apply(obj, args);\n\n          timeout = setTimeout(delayed, threshold || 100);\n      };\n  }\n  // smartresize \n  jQuery.fn[sr] = function(fn){  return fn ? this.bind('resize', debounce(fn)) : this.trigger(sr); };\n\n})(jQuery,'smartresize');\n\n/* Wait for DOM to be ready */\n$(function() {\n  \n\t// Detect resize event\n\t$(window).smartresize(function () {\n\t\t// Set photoset image size\n\t\t$('.photoset-row').each(function () {\n\t\t\tvar $pi    = $(this).find('.photoset-item'),\n\t\t\t\t  cWidth = $(this).parent('.photoset').width();\n\n\t\t\t// Generate array containing all image aspect ratios\n\t\t\tvar ratios = $pi.map(function () {\n\t\t\t\treturn $(this).find('img').data('org-width') / $(this).find('img').data('org-height');\n\t\t\t}).get();\n\n\t\t\t// Get sum of widths\n\t\t\tvar sumRatios = 0, sumMargins = 0,\n          minRatio  = Math.min.apply(Math, ratios);\n\t\t\tfor (var i = 0; i < $pi.length; i++) {\n\t\t\t\tsumRatios += ratios[i]/minRatio;\n\t\t\t};\n      \n      $pi.each(function (){\n        sumMargins += parseInt($(this).css('margin-left')) + parseInt($(this).css('margin-right'));\n      });\n\n\t\t\t// Calculate dimensions\n\t\t\t$pi.each(function (i) {\n\t\t\t\tvar minWidth = (cWidth - sumMargins)/sumRatios;\n\t\t\t\t$(this).find('img')\n          .height(Math.floor(minWidth/minRatio))\n\t\t\t\t\t.width(Math.floor(minWidth/minRatio) * ratios[i]);\n\t\t\t});\n\t\t});\n\t});\n});\n\n/* Wait for images to be loaded */\n$(window).load(function () {\n\n\t// Store original image dimensions\n\t$('.photoset-item img').each(function () {\n      $(this)\n        .data('org-width', $(this)[0].naturalWidth)\n        .data('org-height', $(this)[0].naturalHeight);\n\t});\n\n  $(window).resize();\n});\n"]}